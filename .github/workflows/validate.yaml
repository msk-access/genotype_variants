name: Validate and Test

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '**.rst'
      - '**.gitignore'
      - '.github/**'
    tags-ignore:
      - 'v*'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '**.rst'
      - '**.gitignore'
      - '.github/**'
  workflow_dispatch:
    inputs:
      python-version:
        description: 'Python version'
        required: false
        default: '3.8'

# Set job-level environment variables
env:
  PYTHON_VERSION: '3.8'
  TOX_ENV: 'py38'
  PYTHONDONTWRITEBYTECODE: 1
  PYTHONUNBUFFERED: 1

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        include:
          - python-version: '3.7'
            tox-env: py37
          - python-version: '3.8'
            tox-env: py38
          - python-version: '3.9'
            tox-env: py39
          - python-version: '3.10'
            tox-env: py310
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Cache tox environments
        uses: actions/cache@v3
        with:
          path: .tox
          key: ${{ runner.os }}-tox-${{ matrix.python-version }}-${{ hashFiles('tox.ini', '**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-tox-${{ matrix.python-version }}-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --upgrade tox tox-gh-actions
      
      - name: Run tests with tox
        run: |
          tox -e ${{ matrix.tox-env }} -v
      
      - name: Upload coverage
        if: matrix.python-version == '3.8' && github.event_name == 'push'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
      
      - name: Check code style
        if: matrix.python-version == '3.8'
        run: |
          pip install black flake8 isort mypy
          black --check .
          flake8 .
          isort --check-only .
          mypy .
  
  lint:
    name: Lint with pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files
